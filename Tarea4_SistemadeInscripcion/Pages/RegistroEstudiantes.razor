@page "/RegistroEstudiantes"
@using Tarea4_SistemadeInscripcion.Controllers;
@using Tarea4_SistemadeInscripcion.Models;

<div class="container text-center">
    <EditForm Model="Estudiante" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />

        <h1>Registro de Estudiantes</h1>

        <br />

        <div class="form-group">
            <div class="form-inline">
                <label for="EstudiantesId" class="col-4">Codigo del Estudiante:</label>
                <InputNumber @bind-Value="Estudiante.EstudianteId" class="form-control col-3" />
                <button type="button" class="btn btn-outline-dark" @onclick="Buscar" style="margin: 5px">Buscar</button>
            </div>
        </div>

        <div class="form-group">
            <div class="form-inline">
                <label for="Matricula" class="col-4">Matricula:</label>
                <InputText @bind-Value="Estudiante.Matricula" class="form-control col-4" />
            </div>
            <ValidationMessage For="@(() => Estudiante.Matricula)" />
        </div>

        <div class="form-group">
            <div class="form-inline">
                <label for="Nombres" class="col-4">Nombres:</label>
                <InputText @bind-Value="Estudiante.Nombres" class="form-control col-4" />
            </div>
            <ValidationMessage For="@(() => Estudiante.Nombres)" />
        </div>

        <div class="form-group">
            <div class="form-inline">
                <label for="Balance" class="col-4">Balance:</label>
                <InputNumber @bind-Value="Estudiante.Balance" class="form-control col-4" disabled/>
            </div>
        </div>

        <h3>@Mensaje</h3>
        @*<ValidationSummary />*@

        <div>
            <button type="button" class="btn btn-outline-primary" @onclick="Limpiar" style="margin: 5px">Limpiar</button>
            <button type="submit" class="btn btn-outline-success" style="margin: 5px">Guardar</button>
            <button type="button" class="btn btn-outline-danger" @onclick="Eliminar" style="margin: 5px">Eliminar</button>
        </div>

    </EditForm>
</div>

@code{
    Estudiantes Estudiante = new Estudiantes();
    string Mensaje = string.Empty;

    private void Guardar()
    {
        int estado = 0;
        EstudiantesController estudiantesController = new EstudiantesController();

        Estudiantes EstudianteTemporal = new Estudiantes();
        EstudianteTemporal = estudiantesController.Buscar(Estudiante.EstudianteId);
        if (EstudianteTemporal != null || Estudiante.EstudianteId== 0)
        {
            if(Estudiante.EstudianteId== 0)
            {
                estado = 1;
            }
            if (estudiantesController.Insertar(Estudiante))
            {
                if (estado == 1)
                {
                    Limpiar();
                    Mensaje = "El estudiante se guardo de manera exitosa!...";
                }
                else
                {
                    Limpiar();
                    Mensaje = "El estudiante se modifico de manera exitosa!...";
                }

            }
            else
            {
                if (estado == 1)
                {
                    Mensaje = "El estudiante no se pudo guardar de manera exitosa!...";
                }
                else
                {
                    Mensaje = "El estudiante no se pudo modificar de manera exitosa!...";
                }

            }

        }
        else
        {
            Mensaje = "No se puede modificar un estudiante que no existe!...";
        }


    }

    private void Buscar()
    {

        EstudiantesController estudiantesController = new EstudiantesController();

        Estudiantes EstudianteTemporal = new Estudiantes();
        EstudianteTemporal = estudiantesController.Buscar(Estudiante.EstudianteId);

        if (EstudianteTemporal != null)
        {
            Limpiar();
            Estudiante = EstudianteTemporal;
            Mensaje = "Estudiante encontrado de manera exitosa!...";
        }
        else
        {

            Limpiar();
            Mensaje = "El estudiante no pudo ser encontrado!...";
        }

    }

    private void Eliminar()
    {

        EstudiantesController estudiantesController = new EstudiantesController();

        try
        {
            Estudiantes EstudianteTemporal = new Estudiantes();
            EstudianteTemporal = estudiantesController.Buscar(Estudiante.EstudianteId);

            if (EstudianteTemporal == null)
            {

                Limpiar();
                Mensaje = "No se puede eliminar un estudiante que no existe!...";
            }
            else
            {

                if (estudiantesController.Eliminar(Estudiante.EstudianteId))
                {
                    Limpiar();
                    Mensaje = "El estudiante fue eliminado de manera exitosa!...";
                }
                else
                {

                    Mensaje = "El estudiante no pudo ser eliminado!...";
                }
            }
        }
        catch (Exception)
        {

            throw;
        }

    }

    private void Limpiar()
    {

        Estudiante = new Estudiantes();
        Mensaje = string.Empty;
    }

}